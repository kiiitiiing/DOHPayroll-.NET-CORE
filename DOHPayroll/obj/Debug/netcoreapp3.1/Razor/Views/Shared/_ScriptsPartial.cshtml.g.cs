#pragma checksum "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "301462026276425ad4eadb30734a223b673f5f46"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__ScriptsPartial), @"mvc.1.0.view", @"/Views/Shared/_ScriptsPartial.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\_ViewImports.cshtml"
using DOHPayroll;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\_ViewImports.cshtml"
using DOHPayroll.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\_ViewImports.cshtml"
using DOHPayroll.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\_ViewImports.cshtml"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\_ViewImports.cshtml"
using DOHPayroll.Resources;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"301462026276425ad4eadb30734a223b673f5f46", @"/Views/Shared/_ScriptsPartial.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"abf18aefd1c1ea6931b87dd65b78091d5f0ebf94", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__ScriptsPartial : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<script>
    var loadingSnippetDiv = ""<div class='card card-primary' style='width: 100%' id='spinner_card'><div class='card-header'></div><div class='card-body'></div><div class='overlay' id='spinner_overlay'><i class='fas fa-2x fa-sync fa-spin'></i></div></div>"";
    var loadingSnippet = ""<div class='overlay' id='spinner_overlay'><i class='fas fa-2x fa-sync fa-spin'></i></div>"";
    var modalLoadingSnippet = ""<div class='overlay d-flex justify-content-center align-items-center' id='loading_modal'><i class='fas fa-2x fa-sync fa-spin'></i></div>"";
    var joPayrollContainer = 'job_order_payroll_container';
    var rePayrollContainer = 'regular_payroll_container';

    $(function () {

        $('.readonly').keydown(function (e) {
            e.preventDefault();
        });

        $('.date_picker').on('changeDate', function () {
            $(this).datepicker('hide');
        });
        $('.date_picker').datepicker({
            format: ""MM yyyy"",
            startView: ""months"",
         ");
            WriteLiteral(@"   minViewMode: ""months""
        });

        var joCont = $('#' + joPayrollContainer);
        var reCont = $('#' + rePayrollContainer);
        joCont.on(""click"", ""button[data-save='tab']"", function (e) {
            e.preventDefault();
            e.stopImmediatePropagation();
            var form = joCont.find('form');
            var action = $(form).attr('action');
            var dataToSend = $(form).serialize();
            var userid = '';
            console.log(action);
            $.when($.ajax({
                url: action,
                type: 'post',
                async: true,
                data: dataToSend,
                beforeSend: function () {
                    AppendLoadingJo();
                },
                success: function (output) {
                    joCont.html(output);
                    userid = $(output).find('#userid').val()
                    RemoveSpinner();
                    Toast('success', 'Success');
                },
         ");
            WriteLiteral(@"       error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.status === 401) {
                        location.reload();
                    }
                    else {
                        alert(xhr.responseText);
                        alert(thrownError);
                    }
                }
            })).done(function () {
                LoadJobOrderPayrollList(userid);
            });
        });


        reCont.on(""click"", ""button[data-save='tab']"", function (e) {
            e.preventDefault();
            e.stopImmediatePropagation();
            var form = reCont.find('form');
            var action = $(form).attr('action');
            var dataToSend = $(form).serialize();
            var userid = '';
            var formId = form.attr('id');
            console.log(action);
            console.log(formId);
            $.when($.ajax({
                url: action,
                type: 'post',
                async: true,
              ");
            WriteLiteral(@"  data: dataToSend,
                beforeSend: function () {
                    AppendLoadingRegular();
                },
                success: function (output) {
                    reCont.html(output);
                    userid = $(output).find('#userid').val()
                    RemoveSpinner();
                    Toast('success', 'Success');
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.status === 401) {
                        location.reload();
                    }
                    else {
                        alert(xhr.responseText);
                        alert(thrownError);
                    }
                }
            })).done(function () {
                LoadList(formId, userid);
            });
        });
    });

    //EDIT SALARY
    function UpdateSalary(obj) {
        var reCont = $('#' + rePayrollContainer);
        var joCont = $('#' + joPayrollContainer);
        var stat");
            WriteLiteral(@"us = 'regular';
        var userid = '';
        if (reCont.length == 0) {
            status = 'jo';
            userid = joCont.find('#userid').val().trim();
        }
        else {
            userid = reCont.find('#userid').val().trim();
        }
        var content = obj.parent().parent();
        var tranch = content.find('#salary_tranche').val();
        var grade = content.find('#salary_grade').val();
        var step = content.find('#salary_step').val();
        console.log(userid + "": "" + tranch + "" | "" + grade + ""-"" + step);
        console.log('ID: ' + userid);
        console.log('status: ' + status);
        if (tranch != """" && grade != """" && step != """") {
            var url = '");
#nullable restore
#line 122 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
                  Write(Url.Action("UpdateSalary", "Json"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
            console.log(url);
            $.ajax({
                url: url,
                type: 'POST',
                data: {
                    userid: userid,
                    tranch: tranch,
                    grade: grade,
                    step: step
                },
                success: function (out) {
                    if (status != ""regular"") {
                        joCont.find('#jo_salary').val(out);
                        $('#job_order_container').find('#salary_' + userid).html(out);
                        joCont.find('#jo_salary').popover('hide');
                        ComputeJoDeductions();
                    }
                    else {
                        reCont.find('#regular_salary').val(out);
                        $('#regular_container').find('#salary_' + userid).html(out);
                        reCont.find('#regular_salary').popover('hide');
                        ComputeReDeductions();
                    }
                    ");
            WriteLiteral(@"Toast('success', 'Salary updated');
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.status === 401) {
                        location.reload();
                    }
                    else {
                        alert(xhr.responseText);
                        alert(thrownError);
                    }
                }
            });
        }
        else {
            alert(""Please input required fields."");
        }
    }

    //LoadList
    function LoadList(formid, userid) {
        switch (formid) {
            case 'regular_hazard_form':
                LoadHazard(userid);
                break;
            case 'rata_form':
                LoadRataList(userid);
                break;
            case 'jo_payroll_form':
                LoadJobOrderPayrollList(userid);
                break;
            case 'regular_create_payroll':
                LoadRegularPayrollList(userid);
                brea");
            WriteLiteral(@"k;
            case 'subsistence_form':
                LoadSubsistenceList(userid);
                break;
            case 'longevity_form':
                console.log(formid);
                LoadLongevityList(userid);
                break;
            case 'cellphone_form':
                LoadCellphoneList(userid);
                break;
        }
    }

    //COMPUTE CELLPHONE
    function ComputeCellphone() {
        var reCont = $('#' + rePayrollContainer);
        var amount = reCont.find('#cell_amount').val().trim();
        var lessMonth = reCont.find('#cell_less').val().trim();
        var netAmt = reCont.find('#cell_net_amount');
        var net = (+amount - +lessMonth);
        netAmt.val(roundOff(net));
    }

    //GENERATE REGULAR ALL SUBSISTENCE MODAL
    function GenerateEmployeesSubsistence(modal) {
        var action = modal.find('form').attr('action');
        var date = $(modal).find('#regular_subsistence_date').val();
        var subsistence = $(modal).fin");
            WriteLiteral(@"d('#subsistence_allowance').val();
        var laundry = $(modal).find('#laundry_allowance').val();
        if (date !== '') {
            $.when($.ajax({
                url: action,
                type: 'post',
                async: true,
                data: {
                    date: date,
                    subsistence_allowance: subsistence,
                    laundry_allowance: laundry
                },
                beforeSend: function () {
                    $(modal).find('.modal-content').prepend(modalLoadingSnippet);
                },
                success: function () {
                    $(modal).find('#loading_modal').remove();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.status === 401) {
                        location.reload();
                    }
                    else {
                        alert(xhr.responseText);
                        alert(thrownError);
                  ");
            WriteLiteral(@"  }
                }
            })).done(function (output) {
                console.log(output);
                if (output == true) {
                    Toast('success', 'Generate Successfull');
                }
                else {
                    Toast('error', 'Generate Failed');
                }
            });
        }
        else {
            alert('Please select date!');
        }
    }

    //GENERATE REGULAR PAYROLL MODAL
    function GenerateRegularPayrollModel(modal) {
        var action = modal.find('form').attr('action');
        var date = $(modal).find('#regular_payrolls_date').val();
        if (date !== '') {
            $.when($.ajax({
                url: action,
                type: 'post',
                async: true,
                data: {
                    date: date
                },
                beforeSend: function () {
                    $(modal).find('.modal-content').prepend(modalLoadingSnippet);
                },
         ");
            WriteLiteral(@"       success: function () {
                    $(modal).find('#loading_modal').remove();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.status === 401) {
                        location.reload();
                    }
                    else {
                        alert(xhr.responseText);
                        alert(thrownError);
                    }
                }
            })).done(function (output) {
                console.log(output);
                if (output == true) {
                    Toast('success', 'Generate Successfull');
                }
                else {
                    Toast('error', 'Generate Failed');
                }
            });
        }
        else {
            alert('Please select date!');
        }
    }

    //GENERATE JOB ORDER PAYROLL MODAL
    function GenerateJoPayrollModel(modal) {
        var action = modal.find('form').attr('action');
        var da");
            WriteLiteral(@"te = $(modal).find('#jo_payrolls_date').val();
        var range = $(modal).find('#jo_payrolls_range').val();
        var type = $(modal).find('#jo_disbursement_type').val();
        $.when($.ajax({
            url: action,
            type: 'post',
            async: true,
            data: {
                date: date,
                range: range,
                type: type
            },
            beforeSend: function () {
                $(modal).find('.modal-content').prepend(modalLoadingSnippet);
            },
            success: function () {
                $(modal).find('#loading_modal').remove();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        })).done(function (output) {
            console.log(");
            WriteLiteral(@"output);
            if (output == true) {
                Toast('success', 'Generate Successfull');
            }
            else {
                Toast('error', 'Generate Failed');
            }
        });
    }

    //COMPUTE HAZARD NET AMOUNT
    function ComputeHazard() {
        var regularCont = $('#' + rePayrollContainer);
        var hazard_pay = regularCont.find('#hazard_pay').val().trim();
        var hwmpc = regularCont.find('#hazard_hwmpc').val().trim();
        var mortuary = regularCont.find('#hazard_mortuary').val().trim();
        var globe_bill = regularCont.find('#hazard_globe').val().trim();
        var sun_bill = regularCont.find('#hazard_sun').val().trim();
        var netAmt = regularCont.find('#hazard_net');
        var net = (+hazard_pay) - (+hwmpc + +mortuary + +globe_bill + +sun_bill);
        netAmt.val(roundOff(net));
    }

    //COMPUTE RATA
    function ComputeRATA() {
        var reCont = $('#' + rePayrollContainer);
        var ra = reCont.find('#");
            WriteLiteral(@"rata_ra').val().trim();
        var ta = reCont.find('#rata_ta').val().trim();
        var deduction = reCont.find('#rata_deduction').val().trim();
        var totalRata = reCont.find('#rata_total');
        var total = (+ra + +ta) - +deduction;
        totalRata.val(roundOff(total));
    }

    //COMPUTE JOB ORDER DEDUCTIONS
    function ComputeJoDeductions() {
        // LEGEND:
        //   -LUA = Late/Undertime/Abseces
        var joPayrollContainer = $('#job_order_payroll_container');

        var joAdjustment = joPayrollContainer.find('#jo_adjustment').val();
        var joSalary = joPayrollContainer.find('#jo_salary').val();
        var joWorkingDays = joPayrollContainer.find('#jo_working_days').val();
        var joMinutesLate = joPayrollContainer.find('#jo_minutes_late').val();
        var joAbsentDays = joPayrollContainer.find('.date_inside').length;
        var joEWT = joPayrollContainer.find('#jo_ewt').val();
        var joProfTax = joPayrollContainer.find('#jo_prof_tax').val()");
            WriteLiteral(@";
        var joCoop = joPayrollContainer.find('#jo_coop').val();
        var joOtherAdjustments = joPayrollContainer.find('#jo_other_adjustment').val();
        var joPagibig = joPayrollContainer.find('#jo_pagibig').val();
        var joPhic = joPayrollContainer.find('#jo_phic').val();
        var joGSIS = joPayrollContainer.find('#jo_gsis').val();
        var joPagibigLoan = joPayrollContainer.find('#jo_pagibig_loan').val();


        var joDeduction = ((+joMinutesLate + (480 * +joAbsentDays)) * (((+joSalary / joWorkingDays) / 8) / 60));
        if (isNaN(joDeduction) || !isFinite(joDeduction)) {
            deduction = 0.00;
        }

        joDeduction = roundOff(joDeduction);

        var joNetAmount = roundOff(((+joSalary / 2) + +joAdjustment) - +joDeduction);

        var joTotalDeduction = roundOff(+joDeduction + +joEWT + +joProfTax + +joCoop + +joOtherAdjustments + +joPagibig + +joPhic + +joGSIS + +joPagibigLoan);
        var joNetPay = roundOff(((+joSalary / 2) + +joAdjustment) ");
            WriteLiteral(@"- +joTotalDeduction);

        joPayrollContainer.find('#jo_deduction').val(joDeduction);
        joPayrollContainer.find('#jo_total_deductions').val((joTotalDeduction));
        joPayrollContainer.find('#jo_net_amount').val(joNetAmount);
        joPayrollContainer.find('#jo_total_amount').val(joNetPay);
    }

    //COMPUTE REGULAR DEDUCTIONS
    function ComputeReDeductions() {
        var reCont = $('#' + rePayrollContainer);
        var salary = reCont.find('#regular_salary').val().trim();
        var pera = reCont.find('#regular_pera').val().trim();
        var working_days = reCont.find('#regular_working_days').val().trim();
        var absent_days = reCont.find('.date_inside').length;
        var mins_late = reCont.find('#regular_minutes_late').val().trim();
        var deduction = 0.00;
        deduction = ((+mins_late + (480 * +absent_days)) * (((+salary / + +working_days) / 8) / 60));
        deduction = roundOff(deduction);
        reCont.find('#regular_deduction').val(deduction)");
            WriteLiteral(@";
        var net_amt = (+salary + +pera) - deduction;
        net_amt = roundOff(net_amt);
        reCont.find('#regular_net_amount').val(net_amt);
        var other_deductions = reCont.find('.other_deductions').find('.input-data');
        var sum_other_deductions = 0.00;
        for (var inputs of other_deductions) {
            var value = $(inputs).val().trim();
            sum_other_deductions += +value;
        }
        var total_deductions = (+deduction + +sum_other_deductions);
        reCont.find('#regular_total_deductions').val(total_deductions);
        var net_pay = +net_amt - +total_deductions;
        reCont.find('#regular_total_amount').val(net_pay);
    }

    // COMPUTE LONGEVITY
    function ComputeLongevity() {
        var reCont = $('#' + rePayrollContainer);
        var disallowance = reCont.find('#longevity_disallowance').val();
        var totalLPMO = reCont.find('#longevity_total');
        var i;
        var total = 0;
        for (i = 1; i <= 5; i++) {
     ");
            WriteLiteral(@"       var salary = reCont.find('#salary_' + i).val();
            var lp = roundOff(+salary * 0.05);
            reCont.find('#lp_' + i).val(lp);
            total = +total + +lp;
        }
        totalLPMO.val(roundOff(total));
    }

    // COMPUTE SUBSISTENCE
    function ComputeSubsistence() {
        var reCont = $('#' + rePayrollContainer);
        var subsistence = reCont.find('#subsistence_allowance').val();
        var laundry = reCont.find('#subsistence_laundry').val();
        var hwmpc = reCont.find('#subsistence_hwmcp').val();
        var daysLeave = reCont.find('#subsistence_days').val();
        var deductPerDaySub = reCont.find('#DeductPerLeaveSub').val();
        var deductPerDayLau = reCont.find('#DeductPerLeaveLau').val();
        var net = reCont.find('#subsistence_net');
        var netAmt = (+subsistence + +laundry) - (+hwmpc + (+deductPerDaySub * +daysLeave) + (+deductPerDayLau * +daysLeave));
        net.val(roundOff(netAmt));
    }

    //DELETE PAYROLL
    fu");
            WriteLiteral("nction DeleteDbRow(id, table, userid) {\r\n        var url = \'");
#nullable restore
#line 453 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("DeleteRow", "Json"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.ajax({
            url: url,
            data: {
                id: id,
                table: table
            },
            type: 'post',
            async: true,
            beforeSend: function () {
                AppendLoadingJo();
            },
            success: function (output) {
                RemoveSpinner();
                LoadLists(table, userid);
                if (output) {
                    Toast('success', 'Delete Success');
                }
                else {
                    Toast('error', 'Delete Failed');
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        })
    }

    //LOAD CORRESPONDING VIEW
    function LoadLists(table, userid) {
 ");
            WriteLiteral(@"       switch (table) {
            case 'longevity':
                LoadLongevityList(userid);
                break;
            case 'regular_payroll':
                LoadRegularPayrollList(userid);
                break;
            case 'payroll':
                LoadJobOrderPayrollList(userid);
                break;
            case 'rata':
                LoadRataList(userid);
                break;
            case 'hazard_pay':
                LoadHazard(userid);
                break;
            case 'subsistence':
                LoadSubsistenceList(userid);
                break;
            case 'communicable_allowance':
                LoadCellphoneList(userid);
                break;
        };
    }

    //UPDATE PAYMENTS
    function UpdatePayments(row) {
        var userid = $('#' + joPayrollContainer).find('#userid').val();
        var id = row.val();
        var rowClass = row.find('i').attr('class');
        var tr = row.parent().parent().parent().parent(");
            WriteLiteral(@").parent();
        if (rowClass == 'fas fa-pencil-alt') {
            $(row).find('i').removeClass('fas fa-pencil-alt').addClass('far fa-check-square');
            $(tr).find('#jo_' + id).removeAttr('readonly');
            $(tr).find('#jo_' + id + '_payment').removeAttr('readonly');
            $(tr).find('#jo_' + id + '_paid').removeAttr('readonly');
        }
        else if (rowClass == 'far fa-check-square') {
            var type = $(row).val();
            var value = $(tr).find('#jo_' + id).val();
            var no_payments = $(tr).find('#jo_' + id + '_payment').val();
            var no_paid = $(tr).find('#jo_' + id + '_paid').val();
            $(row).find('i').removeClass('far fa-check-square').addClass('fas fa-sync fa-spin');
            $(tr).find('#jo_' + id).attr('readonly', true);
            $(tr).find('#jo_' + id + '_payment').attr('readonly', true);
            $(tr).find('#jo_' + id + '_paid').attr('readonly', true);
            $(tr).find('#jo_' + id).val((+value).toFix");
            WriteLiteral(@"ed(2));
            $.when(UpdateRemittanceAjax(userid, type, value, no_payments, no_paid)).done(function (output) {
                if (output) {
                    Toast('success', type + ' remittance update success');
                }
                else {
                    Toast('error', type + 'remittance update failed');
                }
                ComputeJoDeductions();
                $(row).find('i').removeClass('fas fa-sync fa-spin').addClass('fas fa-pencil-alt');
            });
        }
    }

    //UPDATE PAYMENTS
    function UpdatePaymentsRegular(row) {
        var userid = $('#' + rePayrollContainer).find('#userid').val();
        var id = row.val();
        var rowClass = row.find('i').attr('class');
        if (id !== 'tax') {
            var tr = row.parent().parent().parent().parent().parent();
            if (rowClass == 'fas fa-pencil-alt') {
                $(row).find('i').removeClass('fas fa-pencil-alt').addClass('far fa-check-square');
             ");
            WriteLiteral(@"   $(tr).find('#regular_' + id).removeAttr('readonly');
                $(tr).find('#regular_' + id + '_payment').removeAttr('readonly');
                $(tr).find('#regular_' + id + '_paid').removeAttr('readonly');
            }
            else if (rowClass == 'far fa-check-square') {
                var type = $(row).val();
                var value = $(tr).find('#regular_' + id).val();
                var no_payments = $(tr).find('#regular_' + id + '_payment').val();
                var no_paid = $(tr).find('#regular_' + id + '_paid').val();
                $(row).find('i').removeClass('far fa-check-square').addClass('fas fa-sync fa-spin');
                $(tr).find('#regular_' + id).attr('readonly', true);
                $(tr).find('#regular_' + id + '_payment').attr('readonly', true);
                $(tr).find('#regular_' + id + '_paid').attr('readonly', true);
                $(tr).find('#regular_' + id).val((+value).toFixed(2));
                $.when(UpdateRemittanceAjax(userid, typ");
            WriteLiteral(@"e, value, no_payments, no_paid)).done(function (output) {
                    if (output) {
                        Toast('success', type + ' remittance update success');
                    }
                    else {
                        Toast('error', type + 'remittance update failed');
                    }
                    ComputeJoDeductions();
                    $(row).find('i').removeClass('fas fa-sync fa-spin').addClass('fas fa-pencil-alt');
                });
            }
        }
        else {
            var tr = row.parent().parent();
            if (rowClass == 'fas fa-pencil-alt') {
                $(row).find('i').removeClass('fas fa-pencil-alt').addClass('far fa-check-square');
                $(tr).find('#regular_' + id).removeAttr('readonly');
            }
            else if (rowClass == 'far fa-check-square') {
                var type = $(row).val();
                var value = $(tr).find('#regular_' + id).val();
                $(row).find('i').removeCl");
            WriteLiteral(@"ass('far fa-check-square').addClass('fas fa-sync fa-spin');
                $(tr).find('#regular_' + id).attr('readonly', true).val((+value).toFixed(2));
                //$(tr).find('#regular_' + id)
                $.when(UpdateRemittanceAjax(userid, type, value, no_payments, no_paid)).done(function (output) {
                    if (output) {
                        Toast('success', type + ' remittance update success');
                    }
                    else {
                        Toast('error', type + 'remittance update failed');
                    }
                    ComputeJoDeductions();
                    $(row).find('i').removeClass('fas fa-sync fa-spin').addClass('fas fa-pencil-alt');
                });
            }
        }
    }

    //LOAD JOB ORDER PAYROLL LIST
    function LoadJobOrderPayrollList(userid) {
            var listUrl = '");
#nullable restore
#line 612 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
                      Write(Url.Action("JobOrderPayrollList","PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
            $.ajax({
                url: listUrl,
                type: 'get',
                data: {
                    userid: userid,
                },
                async: true,
                beforeSend: function () {
                    $('#payroll-list').empty();
                    $('#payroll-list').html(""Loading..."");
                },
                success: function (output) {
                    $('#payroll-list').empty();
                    $('#payroll-list').html(output);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.status === 401) {
                        location.reload();
                    }
                    else {
                        alert(xhr.responseText);
                        alert(thrownError);
                    }
                }
            });
    }

    //UPDATE PAYMENT AJAX
    function UpdateRemittanceAjax(userid, type, value, no_payments, no_paid) {
     ");
            WriteLiteral("   var url = \'");
#nullable restore
#line 642 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("UpdateRemittances", "Json"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        return $.ajax({
            url: url,
            data: {
                userid: userid,
                type: type,
                value: value,
                noPayments: no_payments,
                noPaid: no_paid
            },
            type: 'post',
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    //REMOVE DATE
    function RemoveDateItem(row) {
        row.remove();
        ComputeJoDeductions();
        UpdateAbsentDays();
    }

    // REMOVE DATE REGULAR
    function RemoveDateItemRegular(row) {
        row.remove();
        ComputeReDeductions();
        UpdateAbsentDaysRegular();
    }

    //UPDATE ABSENT DAYS
    function UpdateAbsentDays() {
        var dateLine = '';
");
            WriteLiteral(@"        var forms = $('#' + joPayrollContainer).find('#jo_date_list .date_inside');
        for (var date of forms) {
            dateLine += $(date).text().trim() + ',';
        }
        dateLine = dateLine.substring(0, dateLine.length - 1);
        $('#' + joPayrollContainer).find('#jo_absent_date_line').val(dateLine);
    }

    //UPDATE ABSENT DAYS REGULAR
    function UpdateAbsentDaysRegular() {
        var dateLine = '';
        var forms = $('#' + rePayrollContainer).find('#regular_date_list .date_inside');
        for (var date of forms) {
            dateLine += $(date).text().trim() + ',';
        }
        dateLine = dateLine.substring(0, dateLine.length - 1);
        $('#' + rePayrollContainer).find('#regular_absent_date_list').val(dateLine);
    }

    //APPEND DATES
    function AppendDate(date) {
        var db = $('#' + joPayrollContainer).find('#jo_date_list .date_inside').map(function (i, n) {
            return $(n).html();
        }).get();
        if ($.inArray(da");
            WriteLiteral(@"te, db) == -1 && date !== '') {
            var row = ""<tr><td class='date_inside'>"" + date + ""</td><td>"";
            row += ""<i class='fas fa-times text-danger' style='cursor: pointer;' onclick='RemoveDateItem($(this).parent().parent())'></i></td></tr>"";
            $('#' + joPayrollContainer).find('#jo_date_list').append(row);
        }

        UpdateAbsentDays();
        ComputeJoDeductions();
    }

    //APPEND DATES REGULAR
    function AppendDateRegular(date) {
        var db = $('#' + rePayrollContainer).find('#regular_absent_date_list .date_inside').map(function (i, n) {
            return $(n).html();
        }).get();
        if ($.inArray(date, db) == -1 && date !== '') {
            var row = ""<tr><td class='date_inside'>"" + date + ""</td><td>"";
            row += ""<i class='fas fa-times text-danger' style='cursor: pointer;' onclick='RemoveDateItemRegular($(this).parent().parent())'></i></td></tr>"";
            $('#' + rePayrollContainer).find('#regular_date_list').append(row);");
            WriteLiteral(@"
        }

        UpdateAbsentDaysRegular();
        ComputeReDeductions();
    }

    //GET MINS LATE AND ABSENSES
    function GetMinsLateAbsences(userid, date, option, job_status) {
        console.log(userid + "" | "" + date + "" | "" + option + "" | "" + job_status);
        var url = '");
#nullable restore
#line 734 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("GetMinsAbsences","Json"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"'
        return $.ajax({
            url: url,
            data: {
                userid: userid,
                date: date,
                option: option,
                job_status: job_status
            },
            type: 'post',
            async: true,
            beforeSend: function () {
                if(job_status == 'jo')
                    $('#' + joPayrollContainer).find('.card').append(loadingSnippet);
                else
                    $('#' + rePayrollContainer).find('.card').append(loadingSnippet);
            },
            success: function (output) {
                RemoveSpinner();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    //DELETE EMPLOYEES TO CPRATA");
            WriteLiteral("\n    function DeleteEmployee(userid) {\r\n        var url = \'");
#nullable restore
#line 768 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("DeleteEmployee", "Json"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        console.log(userid);
        $.ajax({
            url: url,
            type: 'post',
            async: true,
            data: {
                userid: userid
            },
            success: function (output) {
                if (output === true) {
                    LoadCPRata();
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    //ADD EMPLOYEES TO CPRATA
    function AddEmployee(userid) {
        var url = '");
#nullable restore
#line 796 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("AddEmployee","Json"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.ajax({
            url: url,
            type: 'post',
            async: true,
            data: {
                userid: userid
            },
            success: function (output) {
                if (output === true) {
                    LoadCPRata();
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    //LOAD EMPLOYEES WITH RATA
    function LoadCPRata() {
        url = '");
#nullable restore
#line 823 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
          Write(Url.Action("RataCellphoneEmployees","Report"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        var container = 'employee_cprata';
        $.ajax({
            url: url,
            type: 'get',
            async: true,
            beforeSend: function () {
                $('#' + container).parent().append(loadingSnippet);
            },
            success: function (output) {
                $('#spinner_overlay').remove()
                $('#' + container).html(output);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    //LOAD JOB ORDER LIST
    function LoadJobOrderList(index, search) {
        var url = '");
#nullable restore
#line 850 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("JobOrderList","PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.ajax({
            url: url,
            data: {
                disbursementType: index,
                search: search
            },
            async: true,
            beforeSend: function () {
                $('#job_order_container').parent().append(loadingSnippet);
            },
            success: function (output) {
                $('#spinner_overlay').remove();
                $('#job_order_container').html(output);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    //LOAD REGULAR LIST
    function LoadRegularList(index, search, cprata) {
        var url = '");
#nullable restore
#line 879 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("RegularList","PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.ajax({
            url: url,
            data: {
                disbursementType: index,
                search: search,
                cprata: cprata
            },
            async: true,
            beforeSend: function () {
                $('#regular_container').parent().append(loadingSnippet);
            },
            success: function (output) {
                $('#spinner_overlay').remove();
                $('#regular_container').html(output);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    // PAGINATION
    function LoadAction(url, container) {
        $.ajax({
            url: url,
            async: true,
            beforeSend: function () {
                $(");
            WriteLiteral(@"'#' + container).parent().append(loadingSnippet);
            },
            success: function (output) {
                $('#spinner_overlay').remove()
                $('#' + container).html(output);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    //UPDATE JOB ORDER PAYROLL
    function UpdateJoPayroll(button) {
        var payrollId = $(button).val();
        var userid = $(button).data('params').split('-')[0];
        var fname = $(button).data('params').split('-')[1];
        var mname = $(button).data('params').split('-')[2];
        var lname = $(button).data('params').split('-')[3];
        var salary = $(button).data('params').split('-')[4];
        var url = '");
#nullable restore
#line 939 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("EditJoPayroll","PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.when($.ajax({
            url: url,
            type: 'get',
            data: {
                userid: userid,
                fname: fname,
                mname: mname,
                lname: lname,
                salary: salary,
                payrollId: payrollId
            },
            async: true,
            beforeSend: function () {
                if ($('#' + joPayrollContainer).children().length > 0) {
                    $(window).scrollTop($('#' + joPayrollContainer).offset().top);
                    $('#' + joPayrollContainer).find('.card').append(loadingSnippet);
                }
                else {
                    $(window).scrollTop($('#' + joPayrollContainer).offset().top);
                    $('#' + joPayrollContainer).append(loadingSnippetDiv);
                }
            },
            success: function (output) {
                if ($('#' + joPayrollContainer).children().length > 0) {
                    $('#spinner_overlay').remove");
            WriteLiteral(@"();
                }
                else {
                    $('#spinner_card').remove();
                }
                $('#' + joPayrollContainer).html(output);
                $(window).scrollTop($('#' + joPayrollContainer).offset().top);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        })).done(function (e) {
            LoadJobOrderPayrollList(userid);
        });
    }

    //LOAD JOB ORDER PAYROLL AND PAYROLL LIST
    function LoadJoPayrollandList(row) {
        var userid = row.find('td:eq(0)').text().trim();
        var fname = row.find('td:eq(4)').text().trim();
        var mname = row.find('td:eq(5)').text().trim();
        var lname = row.find('td:eq(6)').text().trim();
        var salary = ro");
            WriteLiteral("w.find(\'td:eq(3)\').text().trim();\r\n        var url = \'");
#nullable restore
#line 993 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("EditJoPayroll","PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.when($.ajax({
            url: url,
            type: 'get',
            data: {
                userid: userid,
                fname: fname,
                mname: mname,
                lname: lname,
                salary: salary
            },
            async: true,
            beforeSend: function () {
                if ($('#' + joPayrollContainer).children().length > 0) {
                    $(window).scrollTop($('#' + joPayrollContainer).offset().top);
                    $('#' + joPayrollContainer).find('.card').append(loadingSnippet);
                }
                else {
                    $(window).scrollTop($('#' + joPayrollContainer).offset().top);
                    $('#' + joPayrollContainer).append(loadingSnippetDiv);
                }
            },
            success: function (output) {
                if ($('#' + joPayrollContainer).children().length > 0) {
                    $('#spinner_overlay').remove();
                }
               ");
            WriteLiteral(@" else {
                    $('#spinner_card').remove();
                }
                $('#' + joPayrollContainer).html(output);
                $(window).scrollTop($('#' + joPayrollContainer).offset().top);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        })).done(function (e) {
            LoadJobOrderPayrollList(userid);
        });
    }

    //LOAD REGULAR HAZARD AND HAZARD LIST
    function LoadHazardAndList(row) {
        var reCont = $('#' + rePayrollContainer);
        var userid = row.find('td:eq(0)').text().trim();
        var fname = row.find('td:eq(4)').text().trim();
        var mname = row.find('td:eq(5)').text().trim();
        var lname = row.find('td:eq(6)').text().trim();
        var url = ");
            WriteLiteral("\'");
#nullable restore
#line 1046 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("GenerateHazard", "PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.when($.ajax({
            url: url,
            type: 'get',
            data: {
                userid: userid,
                fname: fname,
                mname: mname,
                lname: lname
            },
            async: true,
            beforeSend: function () {
                if (reCont.children().length > 0) {
                    $(window).scrollTop(reCont.offset().top);
                    reCont.find('.card').append(loadingSnippet);
                }
                else {
                    $(window).scrollTop(reCont.offset().top);
                    reCont.append(loadingSnippetDiv);
                }
            },
            success: function (output) {
                if (reCont.children().length > 0) {
                    $('#spinner_overlay').remove();
                }
                else {
                    $('#spinner_card').remove();
                }
                reCont.html(output);
                $(window).scrollTop(reCont.");
            WriteLiteral(@"offset().top);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        })).done(function () {
            LoadHazard(userid);
        });
    }

    //LOAD HAZARD LIST
    function LoadHazard(userid) {
        var listUrl = '");
#nullable restore
#line 1093 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
                  Write(Url.Action("GetHazardList", "PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.ajax({
            url: listUrl,
            type: 'get',
            data: {
                userid: userid,
            },
            async: true,
            beforeSend: function () {
                $('#regular-hazard-list').empty();
                $('#regular-hazard-list').html(""Loading..."");
            },
            success: function (output) {
                $('#regular-hazard-list').empty();
                $('#regular-hazard-list').html(output);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    //LOAD REGULAR CELLPHONE AND CELLPHONE LIST
    function LoadCellphoneAndList(row) {
        var reCont = $('#' + rePayrollContainer);
        var userid = row.find('td:eq(0)').");
            WriteLiteral("text().trim();\r\n        var fname = row.find(\'td:eq(4)\').text().trim();\r\n        var mname = row.find(\'td:eq(5)\').text().trim();\r\n        var lname = row.find(\'td:eq(6)\').text().trim();\r\n        var url = \'");
#nullable restore
#line 1128 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("GenerateCellphone", "PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.when($.ajax({
            url: url,
            type: 'get',
            data: {
                userid: userid,
                fname: fname,
                mname: mname,
                lname: lname
            },
            async: true,
            beforeSend: function () {
                if (reCont.children().length > 0) {
                    $(window).scrollTop(reCont.offset().top);
                    reCont.find('.card').append(loadingSnippet);
                }
                else {
                    $(window).scrollTop(reCont.offset().top);
                    reCont.append(loadingSnippetDiv);
                }
            },
            success: function (output) {
                if (reCont.children().length > 0) {
                    $('#spinner_overlay').remove();
                }
                else {
                    $('#spinner_card').remove();
                }
                reCont.html(output);
                $(window).scrollTop(reCont.");
            WriteLiteral(@"offset().top);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        })).done(function () {
            LoadCellphoneList(userid);
        });
    }

    // LOAD CELLPHONE LIST
    function LoadCellphoneList(userid) {
        var listUrl = '");
#nullable restore
#line 1175 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
                  Write(Url.Action("GetCellphoneList", "PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.ajax({
            url: listUrl,
            type: 'get',
            data: {
                userid: userid,
            },
            async: true,
            beforeSend: function () {
                $('#regular-cellphone-list').empty();
                $('#regular-cellphone-list').html(""Loading..."");
            },
            success: function (output) {
                $('#regular-cellphone-list').empty();
                $('#regular-cellphone-list').html(output);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    //LOAD REGULAR LONGEVITY AND LONGEVITY LIST
    function LoadLongevityAndList(row) {
        var reCont = $('#' + rePayrollContainer);
        var userid = row.find(");
            WriteLiteral("\'td:eq(0)\').text().trim();\r\n        var fname = row.find(\'td:eq(4)\').text().trim();\r\n        var mname = row.find(\'td:eq(5)\').text().trim();\r\n        var lname = row.find(\'td:eq(6)\').text().trim();\r\n        var url = \'");
#nullable restore
#line 1210 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("GenerateLongevity", "PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.when($.ajax({
            url: url,
            type: 'get',
            data: {
                userid: userid,
                fname: fname,
                mname: mname,
                lname: lname
            },
            async: true,
            beforeSend: function () {
                if (reCont.children().length > 0) {
                    $(window).scrollTop(reCont.offset().top);
                    reCont.find('.card').append(loadingSnippet);
                }
                else {
                    $(window).scrollTop(reCont.offset().top);
                    reCont.append(loadingSnippetDiv);
                }
            },
            success: function (output) {
                if (reCont.children().length > 0) {
                    $('#spinner_overlay').remove();
                }
                else {
                    $('#spinner_card').remove();
                }
                reCont.html(output);
                $(window).scrollTop(reCont.");
            WriteLiteral(@"offset().top);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        })).done(function () {
            LoadLongevityList(userid);
        })
    }

    // LOAD SUBSISTENCE LIST
    function LoadLongevityList(userid) {
        var listUrl = '");
#nullable restore
#line 1257 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
                  Write(Url.Action("GetLongevityList", "PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        var containter = $('#regular-longevity-list');
        $.ajax({
            url: listUrl,
            type: 'get',
            data: {
                userid: userid,
            },
            async: true,
            beforeSend: function () {
                containter.empty();
                containter.html(""Loading..."");
            },
            success: function (output) {
                containter.empty();
                containter.html(output);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    //LOAD REGULAR SUBSISTENCE AND SUBSISTENCE LIST
    function LoadSubsistenceAndList(row) {
        var reCont = $('#' + rePayrollContainer);
        var userid = row.find('td:eq(0)'");
            WriteLiteral(").text().trim();\r\n        var fname = row.find(\'td:eq(4)\').text().trim();\r\n        var mname = row.find(\'td:eq(5)\').text().trim();\r\n        var lname = row.find(\'td:eq(6)\').text().trim();\r\n        var url = \'");
#nullable restore
#line 1293 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("GenerateSubsistence", "PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.when($.ajax({
            url: url,
            type: 'get',
            data: {
                userid: userid,
                fname: fname,
                mname: mname,
                lname: lname
            },
            async: true,
            beforeSend: function () {
                if (reCont.children().length > 0) {
                    $(window).scrollTop(reCont.offset().top);
                    reCont.find('.card').append(loadingSnippet);
                }
                else {
                    $(window).scrollTop(reCont.offset().top);
                    reCont.append(loadingSnippetDiv);
                }
            },
            success: function (output) {
                if (reCont.children().length > 0) {
                    $('#spinner_overlay').remove();
                }
                else {
                    $('#spinner_card').remove();
                }
                reCont.html(output);
                $(window).scrollTop(reCont.");
            WriteLiteral(@"offset().top);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        })).done(function () {
            LoadSubsistenceList(userid);
        })
    }

    // LOAD SUBSISTENCE LIST
    function LoadSubsistenceList(userid) {
        var listUrl = '");
#nullable restore
#line 1340 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
                  Write(Url.Action("GetSubsistenceList", "PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.ajax({
            url: listUrl,
            type: 'get',
            data: {
                userid: userid,
            },
            async: true,
            beforeSend: function () {
                $('#regular-subsistence-list').empty();
                $('#regular-subsistence-list').html(""Loading..."");
            },
            success: function (output) {
                $('#regular-subsistence-list').empty();
                $('#regular-subsistence-list').html(output);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    // SET INPUTS
    function SetDoubleInputs(db) {
        for (var inputs of db) {
            var value = roundOff($(inputs).val());
            $(inputs).v");
            WriteLiteral(@"al(value);
        }
    }

    //LOAD REGULAR RATA AND RATA LIST
    function LoadRataAndList(row) {
        var reCont = $('#' + rePayrollContainer);
        var userid = row.find('td:eq(0)').text().trim();
        var fname = row.find('td:eq(4)').text().trim();
        var mname = row.find('td:eq(5)').text().trim();
        var lname = row.find('td:eq(6)').text().trim();
        var url = '");
#nullable restore
#line 1383 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("GenerateRATA", "PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.when($.ajax({
            url: url,
            type: 'get',
            data: {
                userid: userid,
                fname: fname,
                mname: mname,
                lname: lname
            },
            async: true,
            beforeSend: function () {
                if (reCont.children().length > 0) {
                    $(window).scrollTop(reCont.offset().top);
                    reCont.find('.card').append(loadingSnippet);
                }
                else {
                    $(window).scrollTop(reCont.offset().top);
                    reCont.append(loadingSnippetDiv);
                }
            },
            success: function (output) {
                if (reCont.children().length > 0) {
                    $('#spinner_overlay').remove();
                }
                else {
                    $('#spinner_card').remove();
                }
                reCont.html(output);
                $(window).scrollTop(reCont.");
            WriteLiteral(@"offset().top);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        })).done(function () {
            LoadRataList(userid);
        });
    }

    // LOAD RATA LIST
    function LoadRataList(userid) {
        var listUrl = '");
#nullable restore
#line 1430 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
                  Write(Url.Action("GetRATAList", "PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.ajax({
            url: listUrl,
            type: 'get',
            data: {
                userid: userid,
            },
            async: true,
            beforeSend: function () {
                $('#regular-rata-list').empty();
                $('#regular-rata-list').html(""Loading..."");
            },
            success: function (output) {
                $('#regular-rata-list').empty();
                $('#regular-rata-list').html(output);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    // LOAD REGULAR PAYROLL AND PAYROLL LIST
    function LoadRegularPayrollandList(row) {
        var reCont = $('#' + rePayrollContainer);
        var userid = row.find('td:eq(0)').text()");
            WriteLiteral(@".trim();
        var fname = row.find('td:eq(4)').text().trim();
        var mname = row.find('td:eq(5)').text().trim();
        var lname = row.find('td:eq(6)').text().trim();
        var salary = row.find('td:eq(3)').text().trim();
        var url = '");
#nullable restore
#line 1466 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
              Write(Url.Action("EditRegularPayroll","PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.when($.ajax({
            url: url,
            type: 'get',
            data: {
                userid: userid,
                fname: fname,
                mname: mname,
                lname: lname,
                salary: salary
            },
            async: true,
            beforeSend: function () {
                if (reCont.children().length > 0) {
                    $(window).scrollTop(reCont.offset().top);
                    reCont.find('.card').append(loadingSnippet);
                }
                else {
                    $(window).scrollTop(reCont.offset().top);
                    reCont.append(loadingSnippetDiv);
                }
            },
            success: function (output) {
                if (reCont.children().length > 0) {
                    $('#spinner_overlay').remove();
                }
                else {
                    $('#spinner_card').remove();
                }
                $(reCont).html(output);
       ");
            WriteLiteral(@"         $(window).scrollTop(reCont.offset().top);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        })).done(function () {
            LoadRegularPayrollList(userid);
        });
    }

    //LOAD REGULAR PAYROLL LIST
    function LoadRegularPayrollList(userid) {
        var listUrl = '");
#nullable restore
#line 1514 "C:\Users\Keith\source\repos\DOHPayroll\DOHPayroll\Views\Shared\_ScriptsPartial.cshtml"
                  Write(Url.Action("RegularPayrollList","PartialView"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.ajax({
            url: listUrl,
            type: 'get',
            data: {
                userid: userid,
            },
            async: true,
            beforeSend: function () {
                $('#regular-payroll-list').empty();
                $('#regular-payroll-list').html(""Loading..."");
            },
            success: function (output) {
                $('#regular-payroll-list').empty();
                $('#regular-payroll-list').html(output);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 401) {
                    location.reload();
                }
                else {
                    alert(xhr.responseText);
                    alert(thrownError);
                }
            }
        });
    }

    // OPEN MODAL
    function OpenModal(btn) {
        var url = btn.data('url');
        var target = btn.data('target');
        var action = btn.data('action');
        co");
            WriteLiteral(@"nsole.log(url);
        var content = $(action);
        $.when($(target).modal('show')).done(function () {
            $.ajax({
                url: url,
                type: 'get',
                async: true,
                success: function (data) {
                    setTimeout(function () {
                        content.html(data);
                    }, 500);
                },
                timeout: 60000,
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.status === 401) {
                        location.reload();
                    }
                    else {
                        console.log(xhr.status)
                        $('body').find('#loadings').modal('toggle');
                        alert(xhr.responseText);
                        alert(thrownError);
                    }
                }
            });
        });
    }

    //HELPERS

    //REMOVE SPINNER
    function RemoveSpinner() {
        $('");
            WriteLiteral(@"#spinner_overlay').remove();
    }

    //ADD LOADING JOB ORDER
    function AppendLoadingJo() {
        $('#' + joPayrollContainer).find('.card').append(loadingSnippet);
    }

    //APPEND LOADING REGULAR
    function AppendLoadingRegular() {
        $('#' + rePayrollContainer).find('.card').append(loadingSnippet);
    }

    //ROUNDOFF
    function roundOff(number) {
        number = (Math.round((parseFloat(number) + 0.00001) * 100) / 100)
        return parseFloat(number).toFixed(2);
    }

    //FORMAT COMMA
    function formatComma(number) {
        number = number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "","");
        return number;
    }

    // TOAST
    function Toast(type, message) {
        toastr[type](message);
    }

    //COMPPUTE JO DEDUCTION

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
